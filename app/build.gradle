apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.example.copyooftheaudio"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        //输出文件名
        android.applicationVariants.all { variant ->
            variant.outputs.all {

                //  outputFileName = "博为用户端${variant.name}_${variant.versionName}" + new Date().format("yyyyMMdd_HHmmss") + ".apk"
                outputFileName = "音频副本${variant.versionName}-正式包" + new Date().format("yyyyMMdd_HHmmss") + ".apk"
            }
        }
    }
    buildTypes {
        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            buildConfigField "String", "BUILD_VERSION", "\"" + defaultConfig.versionName + " " + new Date().format("yyyyMMdd_HHmmss") + "\""
            shrinkResources  true  //配置true,移除无用的resource文件,可以减小apk包的大小,有瘦身效果
            minifyEnabled true
            zipAlignEnabled true  //是否对齐app所有资源,对齐后,会使得在运行时Android与应用程序间的交互更加有效率;
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField "boolean", "IS_DEBUG", "true"
            buildConfigField "String", "BUILD_VERSION", "\"Beta_" + defaultConfig.versionName + " " + new Date().format("yyyyMMdd_HHmmss") + "\""
            //
            minifyEnabled false
            zipAlignEnabled false  //是否对齐app所有资源,对齐后,会使得在运行时Android与应用程序间的交互更加有效率;
            shrinkResources   false  // 配置true,移除无用的resource文件,可以减小apk包的大小,有瘦身效果
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
//            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.jakewharton:butterknife:10.0.0'
    kapt "com.jakewharton:butterknife-compiler:10.0.0"
    implementation project(':util')
    //http
    implementation 'io.reactivex.rxjava2:rxjava:2.1.5'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    //Cookie持久化管理(推荐)
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'com.bigkoo:convenientbanner:2.0.5'
}
